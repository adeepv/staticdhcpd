= 1.5.4 =
 * Made it easy to upgrade by introducing a buffering setting-default system
 * Refactored some code out of places it didn't need to be
 * Severed a reverse-dependency between libpydhcpserver and staticDHCPd
----
= 1.5.3 (svn-only) =
 * Vendor options are automatically stripped from received packets and exposed to users through a `vendor` parameter
 * Support for a PXE port has been added; see the FAQ for more details
  * Addresses an issue reported by Andrew Xuan
 * Added support for easy logging from user-defined code
----
= 1.5.2 (svn-only) =
 * Addressed an issue with Cisco relays not accepting packets from sockets other than 67
 * Added support for Oracle
----
= 1.5.1 =
 * Fixed a bug with Postgres's configuration, preventing it from being used unless MySQL was configured, too
 * Fixed a documentation error in the README: no netmask was defined
----
= 1.5.0 =
 * Database-flow overhaul
  * Added support for Postgres
  * Added connection pooling
  * Removed concurrency support from SQLite, since it was redundant
 * Converted all source to space-based indentation (you'll want to whitespace-ignorant diff your old <tt>conf.py</tt> files)
 * Cleaned up webserver logging a little
----
= 1.5.0 (preview) =
 * Refactored pydhcplib into libpydhcpserver
  * All code thoroughly commented.
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=3442 RFC3442] (option 121)
  * The data to be sent must be crafted by hand.
  * If there is any demand, a special class will be created.
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=3495 RFC3495] (option 122)
  * The data to be sent must be crafted by hand.
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=3825 RFC3825] (option 123)
  * The data to be sent must be crafted by hand.
  * A special class will be handled to ease this process in a later version.
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=3925 RFC3925] (options 124 and 125)
  * The data to be sent must be crafted by hand.
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=4039 RFC4039] (option 80)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=4280 RFC4280] (options 88 and 89)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=4578 RFC4578] (options 93, 94, and 97)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=4776 RFC4776] (option 99)
  * The data must be crafted by hand, due to the complexity of the option.
  * If there is sufficient demand, a special class may be created.
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=4833 RFC4833] (options 100 and 101)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=5071 RFC5071] (options 208-211)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=5192 RFC5192] (option 136)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=5223 RFC5223] (option 137)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=5417 RFC5417] (option 138)
----
= 1.4.1 =
 * 1.4.0's new RFC options can now be set using lists of bytes
----
= 1.4.0 =
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=2610 RFC2610] (options 78 and 79)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=2937 RFC2937] (option 117)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=3046 RFC3046] (option 82)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=3361 RFC3361] (option 120)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=3396 RFC3396] (long options)
 * Added support for [http://www.rfc-archive.org/getrfc.php?rfc=4174 RFC4174] (option 83)
 * Added BETA support for [http://www.rfc-archive.org/getrfc.php?rfc=4388 RFC4388] (LEASEQUERY)
  * Caveat: only MAC-based lookups are supported; anything else will be served a <tt>DHCPLEASEUNKNOWN</tt> out of necessity
 * Added support for specification of options by number
 * Rebuilt support for [http://www.rfc-archive.org/getrfc.php?rfc=3397 RFC3397] (option 119), with the caveat that the compression algorithm it describes was omitted
----
= 1.3.5 =
 * Updated support and resource URLs
----
= 1.3.4 =
 * Fixed a logic error that resulted in non-RFC-compliant NAKing
  * No clients seem to have noticed or cared, though
----
= 1.3.3 =
 * Fixed a typo that prevented NAKing of unknown MACs in <tt>AUTHORITATIVE</tt> mode
----
= 1.3.2 =
 * Improved concurrent efficiency of the <tt>DHCPDECLINE</tt> and <tt>DHCPRELEASE</tt> events
 * Added better reporting of misconfigured/malicious clients that would break dynamic DHCP servers
 * Added better handling for misconfigured/malicious clients
 * More consistent message formatting
----
= 1.3.1 =
 * Added reporting for <tt>DHCPRELEASE</tt> events, to make it easier to determine whether clients are behaving properly
 * Added reporting for <tt>DHCPDECLINE</tt> events, complete with e-mail notification, to help operators find conflicts in their networks
 * Improved log formatting
 * Improved memory-efficiency of caching mode
----
= 1.3.0 =
 * Added <tt>AUTHORITATIVE</tt> mode, allowing staticDHCPd to be configured to NAK DISCOVERs for unknown MACs, rather than silently ignoring them
 * Added an option to have logfiles written to disk with the current timestamp as a suffix, simplifying the process of creating status snapshots
----
= 1.2.0 =
 * Consistently named and documented convenience functions
----
= 1.1.1 =
 * Added <tt>README</tt> with a quick-start proof-of-concept-for-busy-people guide
----
= 1.1.0 =
 * <tt>USE_CACHE</tt> option added to <tt>conf.py</tt>, allowing for memory-speed performance under heavy load
----
= 1.0.0 =
 * First stable release